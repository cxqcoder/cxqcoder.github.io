<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ps基础</title>
      <link href="/2021/08/24/ps/"/>
      <url>/2021/08/24/ps/</url>
      
        <content type="html"><![CDATA[<ol><li>常用快捷键：ctrl,shift,delete</li><li>设置：编辑-》最下方首选项-》常规（ctrl+k）<br>暂存盘：尽量不要选c盘<br>常规：勾选“停用主页屏幕”或者去除勾选“自动显示屏幕”</li><li>左边竖排为工具栏，上方三角形按钮切换单双排</li><li>最上方为菜单栏<br>下方为属性栏<br>右边为浮动面板，可移动/删除,里面的内容可在菜单栏的窗口里选择，不需要时右键关闭</li><li>新建画布：菜单栏“文件”-》新建（ctrl+N）</li><li>分辨率：<br>屏幕显示： 72-&gt;RGB(颜色显示)</li></ol>]]></content>
      
      
      <categories>
          
          <category> ps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ps基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BOM\EVENT</title>
      <link href="/2021/08/23/bomEvent/"/>
      <url>/2021/08/23/bomEvent/</url>
      
        <content type="html"><![CDATA[<h4 id="bom"><a href="#bom" class="headerlink" title="bom"></a>bom</h4><ol><li>BOM:Browser Object Model（浏览器对象模型）。</li><li>window.navigator.userAgent 获取浏览器信息。</li><li>window.location 浏览器地址信息。<br>window.location.href:url;<br>window.location.search:问号？后面的内容;<br>window.location.hash:#号后面的内容;</li><li>可视区尺寸：clientWidth:,clientHeight。</li><li>滚动距离：滚动条滚动的距离,scrollTop。</li><li>内容高度：scollHeight。</li><li>文档高度：OffsetHeight,OffsetHeight。</li><li>onscroll:当滚动条滚动的时候触发。</li><li>onresize： 当窗口大小发生改变的时候触发。</li></ol><h4 id="Event事件对象及事件流"><a href="#Event事件对象及事件流" class="headerlink" title="Event事件对象及事件流"></a>Event事件对象及事件流</h4><h5 id="焦点事件"><a href="#焦点事件" class="headerlink" title="焦点事件"></a>焦点事件</h5><ol><li>焦点，使浏览器能够区分用户输入的对象，当一个元素有焦点的时候，那么他就可以接受用户的输入。</li><li>设置焦点，点击、tab键、js。不是所有元素都能接受焦点，能够响应用户操作的元素才有焦点。</li><li>onfocus:获取焦点事件；onblur:元素失去焦点事件；focus()设置焦点；blur()失去焦点；<br>select()选择指定元素里面的文本内容。</li></ol><h5 id="事件对象event"><a href="#事件对象event" class="headerlink" title="事件对象event"></a>事件对象event</h5><ol><li>event：事件对象，当一个事件发生的时候，和当前这个对象发生的这个时间有关的一些详细的信息都会被临时保存到一个指定地方-event对象，供需要的时候调用。事件对象必须在一个事件调用的函数里面使用才有内容。</li><li>事件函数：事件调用的函数。一个函数是不是事件函数，不存在定义的决定，而是取决于这个调用的时候</li><li>ie/chrome:event是一个内置全局对象。<br>标准浏览器:事件对象是通过事件函数的第一个参数传入的<br>如果一个函数是被事件调用的，函数的第一个参数就是事件对象</li><li>clientX[Y]:鼠标点击的时候的坐标位置。</li><li>事件冒泡：当一个元素接受到事件的时候，会把他接受到的所有传播给他的父级，一直到顶层window。</li><li>阻止冒泡：当前要阻止冒泡的事件函数中调用event.cancelBubble = true。</li><li>事件绑定：<br>1.obj.onclick=fn();<br>2.标准下：obj.addEventListener(事件名称，事件函数，是否捕获)：<br>有捕获，事件名称没有on,事件执行的顺序是正序，this是触发该事件的；<br>ie:obj.atachEvent(事件名称，事件函数)：<br>没有捕获，事件名称有on，事件函数执行的顺序：标准ie -&gt;&gt; 正序，非标准ie -&gt;&gt; 倒序<br>this指向window</li><li>函数的方法<br>fn.call(),//调用函数fn()==fn.call(),call方法第一个参数可以改变函数执行过程中的内部this的指向，call方法第二个参数开始就是原来函数的参数列表</li><li>事件捕获：与事件冒泡是相反的顺序</li><li>事件的取消<br>ie:obj.dettachEvent(事件名称，事件函数)；<br>标准：obj.removeEventListener(事件名称，事件函数,是否捕获)</li></ol><h5 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h5><ol><li>onkeydown:当键盘按键按下的时候触发，如果按下不抬起，就会连续触发。</li><li>onkeyup:当键盘按键抬起的时候触发,不是所有元素都能够接收键盘事件，能够响应用户输入的元素，<br>能够接受焦点的元素就能接受键盘事件。</li><li>event.code：数字类型，代表键盘按键的值<br>event.ctrlKey:布尔值，按下返回true，否则返回false<br>event.shiftKey:布尔值，按下返回true，否则返回false<br>event.altKey:布尔值，按下返回true，否则返回false</li><li>事件默认行为：当一个事件发生的时候浏览器自己会默认做的时候。<br> oncontextmenu:右键菜单事件，当右键菜单（环境菜单）显示出来的时候触发。</li><li>阻止事件默认行为：</li></ol><h5 id="拖拽原理"><a href="#拖拽原理" class="headerlink" title="拖拽原理"></a>拖拽原理</h5><ol><li>拖拽的时候，如果有文字被选中/拖拽图片，会产生问题<br>原因：当鼠标按下的问题，如果页面中有文字被选中，那么会触发浏览器默认拖拽文字的效果。<br>解决：标准下：阻止默认行为；ie下:setPointCapture全局捕获<br>setPointCapture:设置全局捕获，会监听后续发生的所有事件。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BOM </tag>
            
            <tag> EVENT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>express项目</title>
      <link href="/2021/08/20/express/"/>
      <url>/2021/08/20/express/</url>
      
        <content type="html"><![CDATA[<h3 id="experss项目"><a href="#experss项目" class="headerlink" title="experss项目"></a>experss项目</h3><h4 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h4><ol><li>express安装成功,创建一个文件，命令行输入：express 项目名</li><li>cd到项目中，npm install</li><li>node app.js，启动项目</li><li>在浏览器输入<a href="http://localhost:3000/%EF%BC%8C%E7%9C%8B%E5%88%B0express%E7%9A%84%E7%95%8C%E9%9D%A2">http://localhost:3000/，看到express的界面</a></li><li>npm start 启动<img src="/medias/articImg/30.png" width="50%"><img src="/medias/articImg/31.png" width="50%"></li></ol><h4 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h4><ol><li><p>项目目录</p><img src="/medias/articImg/32.png" width="50%"></li><li><p>package.json</p></li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  "name": "kongjian",</span><br><span class="line">  "version": "1.0.0",</span><br><span class="line">  "description": "",</span><br><span class="line">  "main": "app.js",</span><br><span class="line">  "scripts": {</span><br><span class="line">    "start": "node app.js"</span><br><span class="line">  },</span><br><span class="line">  "author": "",</span><br><span class="line">  "license": "ISC",</span><br><span class="line">  "dependencies": {</span><br><span class="line">    "ejs": "^2.5.6",</span><br><span class="line">    "express": "^4.15.3",</span><br><span class="line">    "express-session": "^1.15.3",</span><br><span class="line">    "formidable": "^1.1.1",</span><br><span class="line">    "fs": "^0.0.1-security",</span><br><span class="line">    "mongodb": "^2.2.29",</span><br><span class="line">    "silly-datetime": "^0.1.2"</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>app.js</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">var express = require("express");</span><br><span class="line">var session = require('express-session');</span><br><span class="line">var route = require("./controller");</span><br><span class="line"></span><br><span class="line">var app = express();</span><br><span class="line">var fs = require("fs");</span><br><span class="line">app.use(session({</span><br><span class="line">    secret: 'keyboard cat',</span><br><span class="line">    resave: false,</span><br><span class="line">    saveUninitialized: true</span><br><span class="line">}))</span><br><span class="line"></span><br><span class="line">app.set("view engine","ejs");</span><br><span class="line">app.use(express.static("./public"));</span><br><span class="line">app.use(express.static("./upload"));</span><br><span class="line">app.use(express.static("./tx"));</span><br><span class="line">//路由</span><br><span class="line">app.get("/",route.showIndex);</span><br><span class="line">app.get("/dirpho",route.showxiangce);</span><br><span class="line">app.post("/dshuo",route.doShuo);</span><br><span class="line">//端口</span><br><span class="line">app.listen(4500);</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li>连接数据库，<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var MongoClient=require("mongodb").MongoClient; //需要npm install mongodb</span><br><span class="line">var dbUrl = require("./setUrl.js");//数据库地址</span><br><span class="line">var url = dbUrl.url;</span><br><span class="line">//数据库连接方法</span><br><span class="line">function collectdb(callback) {</span><br><span class="line">    MongoClient.connect(url, function (err, db) {</span><br><span class="line">        if (err) {</span><br><span class="line">            callback(err, null);</span><br><span class="line">            return;</span><br><span class="line">        }</span><br><span class="line">        callback(null, db)</span><br><span class="line">    })</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li>查询数据库</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">collectdb(function (err,db) {//数据库连接方法</span><br><span class="line">    var cursor;</span><br><span class="line">    var dbase = db.db("kongjian");//数据库名</span><br><span class="line">    //collectionName数据表名</span><br><span class="line">    cursor= dbase.collection(collectionName,function(err,collection){</span><br><span class="line">      if(err){</span><br><span class="line">          console.log(err)</span><br><span class="line">      }else{</span><br><span class="line">          console.log(uname);</span><br><span class="line">          //uname查询的条件，对象格式</span><br><span class="line">          collection.find(uname).toArray(function(err,docs){</span><br><span class="line">            if(err){</span><br><span class="line">                console.log(err)</span><br><span class="line">            }</span><br><span class="line">            callback(null, docs);</span><br><span class="line">            db.close();</span><br><span class="line">          })</span><br><span class="line">      }</span><br><span class="line">    });</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> mongodb </tag>
            
            <tag> express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongodb可视化</title>
      <link href="/2021/08/20/mongoDBView/"/>
      <url>/2021/08/20/mongoDBView/</url>
      
        <content type="html"><![CDATA[<h3 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h3><h4 id="安装robo-3t"><a href="#安装robo-3t" class="headerlink" title="安装robo 3t"></a>安装robo 3t</h4><ol><li><p>在<a href="https://robomongo.org/">官网下载</a>自己需要的版本，然后选择安装</p><img src="/medias/articImg/20.png" width="50%"><img src="/medias/articImg/21.png" width="50%"></li><li><p>点击file 右键选择connection </p><img src="/medias/articImg/22.png" width="50%"><img src="/medias/articImg/23.png" width="50%"></li><li><p>创建数据库</p><img src="/medias/articImg/24.png" width="50%"><img src="/medias/articImg/25.png" width="50%"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongodb使用方法</title>
      <link href="/2021/08/20/mongo/"/>
      <url>/2021/08/20/mongo/</url>
      
        <content type="html"><![CDATA[<h3 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h3><h4 id="安装MongoDB"><a href="#安装MongoDB" class="headerlink" title="安装MongoDB"></a>安装MongoDB</h4><ol><li><p>在<a href="https://www.mongodb.com/try/download/community">官网下载</a>自己需要的版本，然后选择 custom自定义安装</p><img src="/medias/articImg/01.png" width="50%"><img src="/medias/articImg/04.png" width="50%"><img src="/medias/articImg/02.png" width="50%"><img src="/medias/articImg/03.png" width="50%"></li><li><p>在D盘中创建一个文件夹mongoData，mongoData里面在创建文件夹database,文件夹database创建data和log两个文件夹，分别存放数据库和日志</p><img src="/medias/articImg/05.png" width="50%"></li><li><p>在安装的MongoDB文件根目录下创建mongodb.config文件</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dbpath = D:\mongoData\database\data</span><br><span class="line">logpath = D:\mongoData\database\log\mongodb.log</span><br></pre></td></tr></tbody></table></figure><img src="/medias/articImg/06.png" width="50%"></li><li><p>cmd命令行以管理员权限打开，切换到MongoDB的bin目录下，然后输入<br> mongod –dbpath D:\mongoData\database\data</p> <img src="/medias/articImg/07.png" width="50%"> 浏览器输入：localhost:27017,进行访问  <img src="/medias/articImg/08.png" width="50%"></li><li><p>打开新的命令窗口，切换至bin路径下，输入下边命令，路径改为自己的config文件路径，后边的mongodb为服务名<br>mongod –config “D:\MongoDB\mongo.config” -install -serviceName “mongodb”</p><img src="/medias/articImg/09.png" width="50%"></li><li><p>打开新的命令窗口，输入命令：net start mongodb</p><img src="/medias/articImg/10.png" width="50%"></li><li><p>快捷启动，在bin的文件下创建一个.bat文件，每次需要启动时点击一下bat,运行完就好了</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start mongod --dbpath D:\MongoDB\data</span><br></pre></td></tr></tbody></table></figure><img src="/medias/articImg/11.png" width="50%"></li><li><p>环境变量</p><img src="/medias/articImg/13.png" width="50%"></li><li><p>注意问题：安装过程中发生服务特定错误100，再重启计算机<br>解决办法</p><img src="/medias/articImg/12.png" width="50%"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
